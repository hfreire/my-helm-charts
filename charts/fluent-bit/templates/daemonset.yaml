apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "app1.fullname" . }}
  labels:
    {{- include "app1.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "app1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app1.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2020"
        prometheus.io/path: /api/v1/metrics/prometheus
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
          runAsUser: 0
        ports:
          - containerPort: 2020
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: devkmsg
          mountPath: /dev/kmsg
          readOnly: true
        - name: journal
          mountPath: /journal
          readOnly: true
        - name: fluent-bit
          mountPath: /fluent-bit/etc/
      terminationGracePeriodSeconds: 10
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: devkmsg
        hostPath:
          path: /dev/kmsg
      - name: journal
        hostPath:
          path: /var/log/journal
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit
        configMap:
          name: fluent-bit
      serviceAccountName: {{ include "app1.serviceAccountName" . }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
