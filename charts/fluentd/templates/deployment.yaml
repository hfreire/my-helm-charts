apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app1.fullname" . }}
  labels:
  {{- include "app1.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
  {{- include "app1.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
    {{- include "app1.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "app1.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.env }}
          env:
          {{- toYaml .Values.env | nindent 12 }}
        {{- end }}
          ports:
            - containerPort: 5140
              name: 5140udp51403
              protocol: UDP
            - containerPort: 24224
              name: 24224tcp2
              protocol: TCP
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
      {{- if .Values.extraVolumeMounts }}
      {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
  {{- if .Values.extraVolumes }}
  {{- toYaml .Values.extraVolumes | nindent 8 }}
  {{- end }}
